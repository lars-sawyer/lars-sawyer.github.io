
/* eslint no-unused-vars: 0 */
import ifDefined from '@ui5/webcomponents-base/dist/renderer/ifDefined.js';
import { html, svg, repeat, classMap, styleMap, unsafeHTML, setTags, setSuffix } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';
const block0 = (context) => { return html`<div id="${ifDefined(context._id)}" class="ui5-step-input-root" style="${styleMap(context.styles)}" @keydown="${context._onkeydown}" @focusin="${context._onfocusin}" @focusout="${context._onfocusout}"><!-- Decrement Icon --><div class="ui5-step-icon ui5-step-dec" title="${ifDefined(context.decIconTitle)}"><ui5-icon id="${ifDefined(context._id)}-dec" name="${ifDefined(context.decIconName)}" tabindex="-1" accessible-name="${ifDefined(context.decIconTitle)}" @click="${context._decValue}" @focusout="${context._onButtonFocusOut}" @mousedown="${context._decSpin}" @mouseup="${context._resetSpin}" @mouseout="${context._resetSpinOut}" input-icon show-tooltip ?clickable="${context._decIconClickable}"></ui5-icon></div><!-- INPUT --><ui5-input id="${ifDefined(context._id)}-inner" class="ui5-step-input-input" placeholder="${ifDefined(context.placeholder)}" type="${ifDefined(context.type)}" value="${ifDefined(context._valuePrecisioned)}" ?disabled="${context.disabled}" ?required="${context.required}" ?readonly="${context.readonly}" value-state="${ifDefined(context.valueState)}" data-sap-focus-ref ._inputAccInfo ="${ifDefined(context.accInfo)}" ._nativeInputAttributes="${ifDefined(context.inputAttributes)}" @ui5-change="${ifDefined(context._onInputChange)}" @focusout="${context._onInputFocusOut}" @focusin="${context._onInputFocusIn}">${ context.valueStateMessage.length ? block1(context) : undefined }</ui5-input><!-- Increment Icon --><div class="ui5-step-icon ui5-step-inc" title="${ifDefined(context.incIconTitle)}"><ui5-icon id="${ifDefined(context._id)}-inc" name="${ifDefined(context.incIconName)}" tabindex="-1" accessible-name="${ifDefined(context.incIconTitle)}" @click="${context._incValue}" @focusout="${context._onButtonFocusOut}" @mousedown="${context._incSpin}" @mouseup="${context._resetSpin}" @mouseout="${context._resetSpinOut}" input-icon show-tooltip ?clickable="${context._incIconClickable}"></ui5-icon></div><slot name="formSupport"></slot></div>`; };
const block1 = (context) => { return html`<slot name="valueStateMessage" slot="valueStateMessage"></slot>`; };


const main = (context, tags, suffix) => {
	setTags(tags);
	setSuffix(suffix);
	return block0(context);
};
 
export default main;